{"version":3,"sources":["store/actions.ts","store/index.ts","store/selectors.ts","components/CurrentUser/CurrentUser.tsx","api/api.ts","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["SET_TODOS","SET_USER","REMOVE_USER","initialState","todos","user","store","createStore","state","action","type","payload","getTodosSelector","getUserSelector","CurrentUser","useSelector","dispatch","useDispatch","className","id","onClick","name","email","phone","BASE_API","getTodos","a","fetch","resporse","json","getUser","userId","response","TodoList","useState","title","setTitle","status","setStatus","selectedUser","filteredTodos","filter","todo","includes","useEffect","loadTodosFromServer","todosFromServer","getUserById","value","onChange","target","allTodos","completed","filteredTodosByStatus","map","classNames","readOnly","checked","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96513240.chunk.js","sourcesContent":["import { Todo, User } from '../react-app-env';\n\nexport const SET_TODOS = 'SET_TODOS';\nexport const SET_USER = 'SET_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const FILTER_TODOS = 'FILTER_TODOS';\n\nexport const setTodosAction = (payload: Todo[]) => ({\n  type: SET_TODOS,\n  payload,\n});\n\nexport const setUserAction = (payload: User) => ({\n  type: SET_USER,\n  payload,\n});\n\nexport const removeUserAction = () => ({\n  type: REMOVE_USER,\n});\n\n// export const filterTodosAction = (payload: Todo[], text: string) => ({\n//   type: FILTER_TODOS,\n//   payload: payload.filter(todo => todo.title.includes(text)),\n// });\n","import { createStore } from 'redux';\nimport { Action, State } from '../react-app-env';\nimport {\n  REMOVE_USER, SET_TODOS, SET_USER,\n} from './actions';\n\nexport const initialState: State = {\n  todos: [],\n  user: null,\n};\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.payload,\n      };\n\n    case SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case REMOVE_USER:\n      return {\n        ...state,\n        user: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","import { State } from '../react-app-env';\n\nexport const getTodosSelector = (state: State) => state.todos;\n\nexport const getUserSelector = (state: State) => state.user;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeUserAction } from '../../store/actions';\nimport { getUserSelector } from '../../store/selectors';\nimport './CurrentUser.scss';\n\nexport const CurrentUser: React.FC = () => {\n  const user = useSelector(getUserSelector);\n  const dispatch = useDispatch();\n\n  if (!user) {\n    return <p>No user selected</p>;\n  }\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>{`Selected user: ${user.id}`}</span>\n      </h2>\n      <button\n        type=\"button\"\n        onClick={() => {\n          dispatch(removeUserAction());\n        }}\n      >\n        Clear\n      </button>\n\n      <h3 data-cy=\"userName\" className=\"CurrentUser__name\">{user.name}</h3>\n      <p className=\"CurrentUser__email\">{user.email}</p>\n      <p className=\"CurrentUser__phone\">{user.phone}</p>\n    </div>\n  );\n};\n","import { Todo, User } from '../react-app-env';\n\nconst BASE_API = 'https://mate.academy/students-api';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const resporse = await fetch(`${BASE_API}/todos`);\n\n  return resporse.json();\n};\n\nexport const getUser = async (userId: number): Promise<User> => {\n  const response = await fetch(`${BASE_API}/users/${userId}`);\n\n  return response.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './TodoList.scss';\n\nimport { setTodosAction, setUserAction } from '../../store/actions';\nimport { getTodosSelector, getUserSelector } from '../../store/selectors';\n\nimport { getTodos, getUser } from '../../api/api';\n\nimport { Todo } from '../../react-app-env';\n\nexport const TodoList: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [status, setStatus] = useState('');\n\n  const dispatch = useDispatch();\n\n  const selectedUser = useSelector(getUserSelector);\n\n  const todos = useSelector(getTodosSelector);\n  const filteredTodos = todos.filter(todo => todo.title.includes(title));\n\n  const filteredTodosByStatus = (allTodos: Todo[]) => {\n    switch (status) {\n      case 'active': {\n        return allTodos.filter(todo => todo.completed === false);\n      }\n\n      case 'completed': {\n        return allTodos.filter(todo => todo.completed === true);\n      }\n\n      default: {\n        return allTodos;\n      }\n    }\n  };\n\n  useEffect(() => {\n    const loadTodosFromServer = async () => {\n      const todosFromServer = await getTodos();\n\n      dispatch(setTodosAction(todosFromServer));\n    };\n\n    loadTodosFromServer();\n  }, []);\n\n  const getUserById = async (userId: number) => {\n    const user = await getUser(userId);\n\n    dispatch(setUserAction(user));\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <p>Filter todos by title</p>\n        <input\n          type=\"text\"\n          value={title}\n          data-cy=\"filterByTitle\"\n          onChange={({ target }) => {\n            setTitle(target.value);\n          }}\n        />\n        <p>Filter todos by status</p>\n        <select\n          onChange={({ target }) => {\n            setStatus(target.value);\n          }}\n        >\n          <option value=\"all\">\n            All todos\n          </option>\n          <option value=\"active\">\n            Active todos\n          </option>\n          <option value=\"completed\">\n            Completed todos\n          </option>\n        </select>\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {filteredTodosByStatus(filteredTodos).map((todo) => (\n            <li\n              key={todo.id}\n              className={classNames('TodoList__item', {\n                'TodoList__item--unchecked': !todo.completed,\n                'TodoList__item--checked': todo.completed,\n              })}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  readOnly\n                  checked={todo.completed}\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className={classNames('TodoList__user-button', 'button', {\n                  'TodoList__user-button--selected':\n                    selectedUser?.id === todo.userId,\n                })}\n                type=\"button\"\n                onClick={() => {\n                  getUserById(todo.userId);\n                }}\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","// import { useSelector } from 'react-redux';\nimport './App.scss';\nimport { CurrentUser } from './components/CurrentUser';\nimport { TodoList } from './components/TodoList';\nimport './styles/general.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          <CurrentUser />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { store } from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}